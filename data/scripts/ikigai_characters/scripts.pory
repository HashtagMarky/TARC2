script IkigaiCharacterBox_InitialDialogue
 // Move Dynamic Multipush (Maybe Dynamic Multistack) into C.
 // This allows for more flexible controls of whether certain options are available,
 // based of flags defined in array, time of day, map, quest status, opinion levels etc.
 // Store strings in String Variables, taken from character arrays.
{
    charemotedefault
    mnmbox("Hello there, {NICKNAME}.", waitbuttonpress=FALSE, remain=TRUE)
    // callnative(ReplaceFieldMessageWithFrame) // Potential Function for Musghot Window blended into Message Box
    dynmultipush("Talk", DIALOGUE_OPTION_TALK)
    dynmultipush("Opinion", DIALOGUE_OPTION_OPINION)
    dynmultipush("Romance", DIALOGUE_OPTION_ROMANCE)
    dynmultipush("Quests", DIALOGUE_OPTION_QUESTS)
    dynmultipush("Battle", DIALOGUE_OPTION_BATTLE)
    dynmultipush("Gift", DIALOGUE_OPTION_GIFT)
    dynmultipush("Goodbye", DIALOGUE_OPTION_GOODBYE)
    dynmultistack(0, 0, FALSE, 2, TRUE, 0, DYN_MULTICHOICE_CB_DIALOGUE_OPTIONS)
    switch (var(VAR_RESULT))
    {
        case DIALOGUE_OPTION_TALK:
            goto(IkigaiCharacterBox_Talk)
        case DIALOGUE_OPTION_OPINION:
            goto(IkigaiCharacterBox_Debug_GetOpinion)
        case DIALOGUE_OPTION_ROMANCE:
            goto(IkigaiCharacterBox_RomanceMenu)
        case DIALOGUE_OPTION_QUESTS:
        case DIALOGUE_OPTION_BATTLE:
        case DIALOGUE_OPTION_GIFT:
            goto(IkigaiCharacterBox_Talk)
        case DIALOGUE_OPTION_GOODBYE:
        default:
            goto(IkigaiCharacterBox_Goodbye)
    }
}

script IkigaiCharacterBox_Goodbye
{
    mnmbox("Goodbye.", waitbuttonpress=FALSE, remain=TRUE)
    charemotedefault
    waitbuttonpress
    release
    end
}

script IkigaiCharacterBox_Talk
{
    mnmbox("What response will you\ngive to me?", waitbuttonpress=FALSE, remain=TRUE)
    attitudechoice("Inspiring", "Humble", "Dominant", "Cynical", "Neutral", bPress=FALSE)
    callnative(IkigaiCharacter_HandleDialogue_Attitudes)
    emote(OBJ_EVENT_ID_PLAYER, EMOTE_TALK)
    if (var(VAR_RESULT) == MULTI_B_PRESSED)
    {
        goto(IkigaiCharacterBox_Goodbye)
    }
    charemoteresult
    release
}

script IkigaiCharacterBox_Debug_GetOpinion
{
    callnative(DEBUG_IkigaiCharacter_CharacterOpinions)
    msgbox("{STR_VAR_1}", MSGBOX_DEFAULT)
    closemessage
    end
}

script IkigaiCharacterBox_RomanceMenu
{
    getromanticflag
    if (var(VAR_RESULT) == TRUE)
    {
        dynmultipush("End Romance", SET_CLEAR_ROMANCE)
    }
    else
    {
        dynmultipush("Start Romance", SET_CLEAR_ROMANCE)
    }
    dynmultipush("Set Exclusive Romance", ROMANCE_EXCLUSIVE)
    dynmultipush("Check Romance", CHECK_ROMANCE)
    dynmultistack(0, 0, TRUE, 3, FALSE, 0, DYN_MULTICHOICE_CB_NONE)

    switch (var(VAR_RESULT))
    {
        case SET_CLEAR_ROMANCE:
            toggleromanticflag
            getromanticflag
            if (var(VAR_RESULT) == TRUE)
            {
                mnmbox("You're so sweet, {NICKNAME}.")
            }
            else
            {
                mnmbox("That's a shame, {NICKNAME}.")
            }
            end
        case ROMANCE_EXCLUSIVE:
            setromanticflagexclusive
            mnmbox("You're the sweetest, nobody compares\nto you {NICKNAME}.")
            end
        case CHECK_ROMANCE:
        default:
            checkrelationships
            if (var(VAR_RESULT) == CHARACTER_DEFAULT)
            {
                mnmbox("It seems you're single, {NICKNAME}.")
            }
            elif (var(VAR_RESULT) == CHARACTER_COUNT_TOTAL)
            {
                mnmbox("It seems you're in multiple\nrelationships, {NICKNAME}.")
            }
            else
            {
                if (var(VAR_RESULT) == VAR_0x8004)
                {
                    mnmbox("We are in an exclusive relationship.")
                }
                else
                {
                    buffercharactername
                    mnmbox("You are in an exclusive relationship\nwith {STR_VAR_1}.")
                }
            }
    }
}
